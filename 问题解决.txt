
#### Windows python2 和 python3 同时安装
1. 安装过后记得修改环境变量
2. 将python 重命名成 python2 或者 python3
3. 改名后pip 会找不到以前的python 报错 "Fatal error in launcher: Unable to create process using '"'"
4. 此时需要重新安装下 pip , python2 -m pip install --upgrade --force-reinstall pip
5. pycharm 数据库显示时区问题，在 advance vm 加入 -Duser.timezone=GMT+08

#### Linux 安装python3
1. 安装python 依赖库 yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel gcc samba
2. 官网下载压缩包
3. 解压，cd pythonXXX
4. ./configure # 默认安装到 /usr/local/bin/ /usr/local/lib/
5. make && make install

#### samba
1. rpm -q samba
2. yum install samba
4. 安装ntfs-3g https://www.tuxera.com/community/open-source-ntfs-3g/ ./configure;make && make install
5. systemctl disable NetworkManager
7. systemctl stop firewalld ; systemctl disable firewalld
8. 禁用：selinux /etc/selinux SELINUX=disabled
9. systemctl disable smb;systemctl disable nmb

客户端处安装 yum install cifs-utils

mount -t cifs //172.29.100.100/wuo/W2003R2PAR_1_2018-08-01T20-30-38.350867 /mnt/smb/ -o username="wuo",password="843207",iocharset=utf8,ro,file_mode=0777,dir_mode=0777


#### shell退出 后台任务不退出
1. yum install coreutils 
2. nohub cmd &

cp /etc/yum.repos.d/* /home/myroot/etc/yum.repos.d/
cp /etc/resolv.conf /home/myroot/etc/

yum install python34
$ curl -O https://bootstrap.pypa.io/get-pip.py 
chroot
$ sudo /usr/bin/python3.4 get-pip.py # chrot
cp linux_iso.service /usr/lib/systemd/system/
ln -s /usr/lib/systemd/system/linux_iso.service /etc/systemd/system/multi-user.target.wants/linux_iso.service

mkisofs -R -l -L -D -J -b isolinux/isolinux.bin -c isolinux/boot.catalog -o /home/Modified-CentOS-7-livecd-GNOME-x86_64.iso -no-emul-boot -boot-load-size 4 -boot-info-table -V "CentOS-7-livecd-GNOME-x86_64" .

mkisofs -r -J -T -V "CentOS-7-livecd-GNOME-x86_64" -o ../mynew.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table .


mkisofs -o Custom-CentOS.iso -J -r -hide-rr-moved -hide-joliet-trans-tbl -V CentOS-7-livecd-GNOME-x86_64 -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table /iso/CentOS-6.2-x86_64-LiveCD


"/usr/libexec/qemu-kvm" -cpu core2duo -rtc clock=host,driftfix=none -boot menu=on -enable-kvm -device virtio-scsi-pci,id=scsi0 -bios /usr/share/seabios/bios-256k.original.bin -m 512M -cpu core2duo -vnc 0.0.0.0:333 -smp sockets=1,cores=2 -usb -vga std -device virtio-blk-pci,scsi=off,drive=drive-virtio-disk1,serial=e9fe184af052475aac7621bfac1f01b0,bootindex=100 -drive file=/home/Modified-CentOS-7-livecd-GNOME-x86_64.iso,if=none,id=drive-virtio-disk1,cache=writethrough


rpm -e --nodeps package

mksquashfs [source folder] [SquashFS target file] -b 1048576 -comp xz -Xdict-size 100%
yum remove avahi-autoipd avahi-libs avahi chrony postfix
mkdir {dev,proc,etc,sbin,bin,lib,mnt,usr}
cp -a /dev/console /home/iso/myrootfs/dev
cp -a /dev/ramdisk /home/iso/myrootfs/dev
cp -a /dev/ram0 /home/iso/myrootfs/dev
cp -a /dev/null /home/iso/myrootfs/dev
cp -a /dev/tty1 /home/iso/myrootfs/dev
cp -a /dev/tty2 /home/iso/myrootfs/dev

mount -t proc proc proc/
mount -t sysfs sys sys/
mount -o bind /dev dev/

/usr/libexec/qemu-kvm -enable-kvm -m 2048 -smp 2 -boot menu=on -device virtio-scsi-pci,id=scsi0 -drive file=CentOS-7-livecd-x86_64.iso,if=none,id=drive-ide1,media=cdrom -device ide-cd,bus=ide.1,unit=0,drive=drive-ide1,id=ide1,bootindex=100 -vnc 0.0.0.0:333 
yum --releasever=/ --installroot=$CHROOT -y install coreutils
yum grouplist --installroot=$(pwd) --releasever=/
172.16.200.254
zhoubo01@clerware.cq
12345678

# use scsi
/usr/libexec/qemu-kvm -cpu host -rtc clock=host,driftfix=none -enable-kvm -boot menu=off -device virtio-scsi-pci,id=scsi0 -drive file=./tinycore-custom.iso,if=none,id=drive-scsi0-0-0-0 -device scsi-cd,bus=scsi0.0,channel=0,scsi-id=0,lun=0,drive=drive-scsi0-0-0-0 -m 2048M -cpu core2duo -vnc 0.0.0.0:300 -smp sockets=1,cores=2 -usb -vga std
# use ide, 需要加入bios 及-no-clerwaredev
/usr/libexec/qemu-kvm -cpu host -rtc clock=host,driftfix=none -enable-kvm -boot menu=off -drive file=/home/build_iso/work/Custom-CentOS.iso,if=none,id=drive-ide2,media=cdrom -device ide-cd,bus=ide.1,unit=0,drive=drive-ide2,id=ide2,bootindex=200 -m 2048M -cpu core2duo -vnc 0.0.0.0:300 -smp sockets=1,cores=2 -usb -vga std -bios /usr/share/seabios/bios-256k.original.bin -no-clerwaredev


zlib-devel
bzip2-devel
openssl-devel
ncurses-devel
sqlite-devel
readline-devel
tk-devel
gdbm-devel
db4-devel
libpcap-devel
xz-devel

yum groupremove "GNOME Desktop Environment"
for i in $(./busyboxc/busybox --list);do ln -s ./busyboxc/busybox $i;done

cpio -i --make-directories < initrd-2.6.14.2.img

CentOS-7-livecd-x86_64

iptables -A INPUT -s 172.16.2.131 -j DROP
mknod -m 660 /dev/tty0 c 4 0
package-cleanup --leaves --all
ps aux|grep multi_threading_process_hangs|grep -v grep|awk '{print $2}'|xargs kill -9
systemd-analyze blame
systemd-analyze plot> plot.svg


mount -t cifs //{samba_server}/{samba_user}/{samba_user}/{host_name}/ {dst_point} -o username="{samba_user}",password="{samba_password}",iocharset=utf8,ro,vers=3.0
mount -t cifs "//172.16.2.51/kwz/WIN-EBLFG7R2OG3_44_2018-09-12T16-03-20.735014/" home1 -o username="kwz",password="928064",iocharset=utf8,ro,vers=3.0
mount -t cifs "//172.16.2.51/kwz/W2008R2(F4S0)_49_2018-09-12T17-01-38.422313/" home2 -o username="kwz",password="928064",iocharset=utf8,ro,vers=3.0

sed -i '/172.29.100.1/d' /root/.ssh/known_hosts


/etc/systemd/system/basic.target.wants/rhel-dmesg.service

floppy.allowed_drive_mask=0 

import cProfile
import marshal

profiler = cProfile.Profile()
profiler.runcall(work.work)
profiler.create_stats()
profiler.dump_stats('filename')

snakeviz generate_parameters_f6269a2a38154664a8251176c6d5064c.stats -H 172.16.2.56 -p 8888 -s
ssh -C -f -N -g root@172.29.100.4 -L 33333:172.29.100.4:22




#!/bin/sh

host=$1
echo $1
sshpass -vp 'f' scp /home/linux_iso/Custom-CentOS.iso root@$1:/home/linux_iso/
sshpass -vp 'f' scp -r /sbin/aio/linux_iso root@$1:/sbin/aio/
sshpass -vp 'f' scp /usr/sbin/aio/logic_service/samba.py root@$1:/sbin/aio/logic_service/
sshpass -vp 'f' scp /usr/sbin/aio/box_dashboard/apiv1/views.py root@$1:/sbin/aio/box_dashboard/apiv1/
#scp /usr/sbin/aio/box_dashboard/xdashboard/templates/restore_body.html root@$1:/sbin/aio/box_dashboard/xdashboard/templates/

#### gdb with python
sudo yum install yum-utils
sudo debuginfo-install glibc
sudo yum install gdb python-debuginfo


/usr/share/gdb/python/gdb
python import sys
python sys.path.insert(0, “/usr/share/gdb/python/gdb”)
python import libpython

#### 安装符号表
wget "https://dl.fedoraproject.org/pub/epel/7Server/x86_64/debug/Packages/p/python34-debuginfo-3.4.9-1.el7.x86_64.rpm"
source /usr/lib/debug/usr/lib64/libpython3.4m.so.1.0.debug-gdb.py
py-by
py-list
py-locals


1019  yum install gdb python-debuginfo
 1020  debuginfo-install bzip2-libs-1.0.6-13.el7.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.15.1-8.el7.x86_64 libcom_err-1.42.9-9.el7.x86_64 libffi-3.0.13-18.el7.x86_64 libgcc-4.8.5-11.el7.x86_64 libselinux-2.5-6.el7.x86_64 libstdc++-4.8.5-11.el7.x86_64 libuuid-2.23.2-33.el7.x86_64 openssl-libs-1.0.2k-8.el7.x86_64 pcre-8.32-15.el7_2.1.x86_64 sqlite-3.7.17-8.el7.x86_64 xz-libs-5.2.2-1.el7.x86_64 zlib-1.2.7-17.el7.x86_64

# 创建动态链接库
gcc -shared -o archive_helper.so -fPIC archive_helper.c quicklz.c

gcc -fPIC archive_helper.c quicklz.c -o archive_helper -lrt -Wl,-rpath,./

#### alembic
	1. 创建一次迁移
		alembic revision -m "create table"
		
	2. 修改产生的迁移文件
	
	3. 执行更新 alembic upgrade head

更新 rpc box_dashboard logic_service archive_helper.so
	
pip install alembic
cd /sbin/aio/logic_service/media/;alembic upgrade head
cd /sbin/aio/box_dashboard/;python manage.py makemigrations;python manage.py migrate

#### 收集硬件信息
1. yum install -y lrzsz rsync openssh-clients
2. rsync: Failed to exec ssh: No such file or directory (2) 没有安装ssh客户端 yum install -y openssh-clients






